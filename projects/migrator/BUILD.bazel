load("@aspect_bazel_lib//lib:transitions.bzl", "platform_transition_filegroup")
load("@aspect_rules_py//py:defs.bzl", "py_binary", "py_library")
load("@rules_oci//oci:defs.bzl", "oci_tarball")
load("//:py_layer.bzl", "py_oci_image")

py_library(
    name = "lib",
    srcs = glob(["**"]),  # keep
    deps = ["@pypi//typer", "@pypi//alembic", "@pypi//sqlalchemy", "@pypi//asyncpg"]
)

py_binary(
    name = "binary",
    srcs = ["__main__.py"],
    data = glob(["versions/*", "alembic.ini"]),
    deps = ["//projects/migrator:lib"],
    main = "__main__.py"
)

py_oci_image(
    name = "image",
    base = "@ubuntu",
    binary = "binary",
    entrypoint = ["/projects/migrator/binary", "current"],
)

platform(
    name = "aarch64_linux",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:aarch64",
    ],
)

platform(
    name = "x86_64_linux",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
)

platform_transition_filegroup(
    name = "platform_image",
    srcs = [":image"],
    target_platform = select({
        "@platforms//cpu:arm64": ":aarch64_linux",
        "@platforms//cpu:x86_64": ":x86_64_linux",
    }),
)

oci_tarball(
    name = "tarball",
    image = ":platform_image",
    repo_tags = ["gcr.io/stocknota_migrator:latest"],
)